<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.alignment:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.math:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel
:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.core.parameter:beast.evolution.tree.coalescent:multitypetree.operators:multitypetree.util:master.beast:master.conditions:master.model:master.postprocessors:master.outputs:master" version="2.0">

	<!-- NOTE: THIS XML FILE REQUIRES THE INSTALLATION
	OF THE BEAST2 PACKAGE feast (in addition to bdmm)
	To install BEAST packages, open BEAUTi, click File/Manage Packages,
	click on the package you want to install in the list,
	and click Install/Upgrade at the bottom of the window. -->

	<!-- This XML file is an example of an XML file set up to perform inference
	under the multi-type birth-death model with the BEAST2 package bdmm.
	In this example, the samples were sampled in two successive "rho-sampling" events.
	"rho-sampling" represent a sampling procedure happening at a specific point
	in time at which each lineage is sampled with a probability rho.
	When the sampling time is the "present", rho-sampling is usually called "contemporaneous sampling".
	The multi-type birth-death model, as implemented in bdmm,
	supports rho-sampling at present but also in the past.
	Multiple rho-sampling events can be defined in conjunction with sampling through time.
	In the example presented here, there is no sampling through time
	 (the samplingRate parameter is fixed to 0),
	and the tree is fixed to the input tree for simplicity. -->


	<map name="Beta">beast.base.inference.distribution.Beta</map>
	<map name="Exponential">beast.base.inference.distribution.Exponential</map>
	<map name="InverseGamma">beast.base.inference.distribution.InverseGamma</map>
	<map name="LogNormal">beast.base.inference.distribution.LogNormalDistributionModel</map>
	<map name="Gamma">beast.base.inference.distribution.Gamma</map>
	<map name="Uniform">beast.base.inference.distribution.Uniform</map>
	<map name="prior">beast.base.inference.distribution.Prior</map>
	<map name="LaplaceDistribution">beast.base.inference.distribution.LaplaceDistribution</map>
	<map name="OneOnX">beast.base.inference.distribution.OneOnX</map>
	<map name="Normal">beast.base.inference.distribution.Normal</map>

	<tree id="tree" spec='feast.fileio.TreeFromNexusFile'
		  fileName='BDMUC_example_rho_sampling.tree'
		  IsLabelledNewick="true" adjustTipHeights="false"/>


	<distribution spec="bdmm.evolution.speciation.BirthDeathMigrationModelUncoloured" id="treePrior" tree="@tree"
				  typeLabel="type" stateNumber="2" conditionOnSurvival="true" checkRho="true">
		<migrationMatrix spec="beast.base.inference.parameter.RealParameter" id="rateMatrix" value="0.3" dimension="2" lower="0" upper="100"/>
		<parameter name="frequencies" id="geo-frequencies" value=".5 .5" lower="0." upper="1." dimension="2"/>
		<parameter name="birthRate" id="birthRate" lower="0" dimension="2" value="3"/>
		<parameter name="deathRate" id="deathRate" value="1.0" lower="0" dimension="2" />
		<parameter name="samplingRate" id="samplingRate" value="0.0" lower="0" dimension="2"  upper="1."/>
		<parameter name="rho" id="rho" value="0.5 0.5 0.1 0.1" lower="0" dimension="4"  upper="1."/>
		<!-- Vector of 4 values representing rho-sampling probabilities for each type and each event.
	  First 2 values are for type 0 and last 2 values for type 1. For each type, the first value is the earliest rho-sampling event (counted forward in time,
	here 1.5 time units before present) and second value is for the most recent rho-sampling event: at present.-->
		<parameter name="rhoSamplingTimes" id="rhoSamplingTimes" value="0.0 1.5" dimension="2"/>
		<!-- Rho-sampling events (events of simultaneous sampling of the entire population, with a probability rho for each lineage to be sampled) times.
	Times are input as ages relative to present (date of most recent sample): 0.0 is the present, 1.5 is 1.5 units in the past relative to the present. -->
		<reverseTimeArrays spec="beast.base.inference.parameter.BooleanParameter" value="false false false true"/>
		<!-- Set fourth value to "true" to specify rho-sampling times backward in time (only applies to the 'rhoSamplingTimes' vector, not to the 'rho' vector) -->
	</distribution>

	<run chainLength="5000000" id="mcmc" spec="MCMC" storeEvery="10000" numInitializationAttempts="100">

		<state id="state" storeEvery="10000">
			<stateNode idref="birthRate"/>
			<stateNode idref="rho"/>
			<stateNode idref="rateMatrix"/>
			<stateNode idref="geo-frequencies"/>
		</state>

		<distribution id="posterior" spec="beast.base.inference.CompoundDistribution">
			<distribution id="prior" spec="beast.base.inference.CompoundDistribution">
				<distribution idref="treePrior"/>
				<prior id="birthRatePrior" name="distribution" x="@birthRate">
					<LogNormal name="distr" M="0." S="1.25"/>
				</prior>
				<prior id="rhoPrior" name="distribution" x="@rho">
					<Uniform name="distr" lower="0.0" upper="1.0"/>
				</prior>
				<prior id="migPrior" name="distribution" x="@rateMatrix">
					<LogNormal name="distr" M="-1" S="1.25"/>
				</prior>
			</distribution>
		</distribution>

		<operator id='birthRateOperator' spec='ScaleOperator' scaleFactor=".85" weight="2" parameter="@birthRate" scaleAll="true"/>
		<operator id='rhoOperator' spec='ScaleOperator' scaleFactor=".9" weight="2" parameter="@rho" scaleAll="false"/>
		<operator id='rateMatrixOperator' spec='ScaleOperator' scaleFactor=".75" weight="2" parameter="@rateMatrix"/>
		<operator id="updown1" spec="UpDownOperator" scaleFactor=".9" weight="2" up="@birthRate" down="@rho"/>
		<operator id="updown2" spec="UpDownOperator" scaleFactor=".9" weight="2" up="@rateMatrix" down="@birthRate"/>

		<operator spec="DeltaExchangeOperator" parameter="@geo-frequencies" delta="0.2" weight=".1"/>

		<logger fileName="$(filebase)_$(seed).log" id="log" logEvery="10000" mode="autodetect">
			<distribution idref="posterior" name="log"/>
			<log idref="treePrior"/>
			<log idref="birthRate"/>
			<log idref="deathRate"/>
			<log idref="rho"/>
			<log idref="samplingRate"/>
			<log idref="rateMatrix"/>
			<log idref="geo-frequencies"/>
      <log spec="bdmm.loggers.RootProbLogger" bdmmuc="@treePrior"/>
		</logger>

		<logger fileName="$(filebase)_$(seed).trees" logEvery="1000" mode="autodetect"
				log="@tree"/>

		<logger id="screenlog" logEvery="1000" mode="autodetect">
			<distribution idref="posterior" name="log"/>
			<log arg="@posterior" id="ESS.0" spec="util.ESS"/>
			<log idref="treePrior"/>
			<log idref="birthRate"/>
			<log idref="rho"/>
			<log idref="rateMatrix"/>
		</logger>
	</run>

</beast>
